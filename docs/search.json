[
  {
    "objectID": "tokenomics.html",
    "href": "tokenomics.html",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "This paper presents RØMER Chain’s tokenomics model, grounded in Austrian economic principles of sound money and market-driven price discovery. Through dynamic supply adjustment that both expands and contracts based on real market demand, RØMER creates a system where token supply precisely reflects network utility. The model employs proportional fee burning during low-demand periods to reduce total supply, while allowing supply expansion only when genuine market demand exceeds network capacity. This approach creates a blockchain economy that responds organically to market conditions through both growth and contraction phases.\n\n\n\nTraditional blockchain networks often struggle with rigid monetary policies that fail to contract supply during periods of reduced demand, leading to price instability and misaligned incentives. RØMER Chain takes a fundamentally different approach, embracing Austrian economic principles where market participants’ actions determine not only supply expansion but also supply contraction, creating a truly responsive monetary system.\n\n\n\n\n\nRØMER’s economic model is built on key Austrian economic concepts:\n\nNatural Price Discovery: All prices emerge from genuine market activity rather than central planning.\nSound Money Principles: Token supply adjusts bidirectionally based on real market demand.\nMarket-Driven Growth and Contraction: Network monetary policy responds organically to actual usage patterns.\nTime Preference: The model acknowledges that market participants have different time preferences for computation resources.\n\n\n\n\nThe model implements these principles through three interconnected mechanisms:\n\nBase Validator Rewards: A steady emission of 1 RØMER per block to validators, representing the baseline cost of securing the network.\nDynamic Supply Control: Fee burning that exceeds validator emissions during low demand periods, creating natural supply contraction.\nDemand-Based Issuance: New token issuance occurs only when compute demand exceeds the network’s base capacity, representing genuine market growth.\n\n\n\n\n\n\n\nThe system recognizes three natural market states:\n\nBelow Market Demand Threshold\n\nValidator rewards: 1 RØMER per block\nFee burning: &gt;1 RØMER per block (exceeds validator emissions)\nNet result: Supply contraction reflecting reduced market demand\nNatural price discovery through supply reduction\nBlock space optimization opportunities: Fixed block cost enables bulk transaction efficiency\n\nDuring low demand periods, the system actively reduces total supply by burning more tokens than are emitted. The burn rate is proportional to how far below the base threshold demand has fallen. This creates a natural supply contraction that maintains price equilibrium even during market downturns. For example:\nIf demand is at 50% of base threshold:\n- Validator emission: 1 RØMER/block\n- Fee burning: 2 RØMER/block\n- Net supply change: -1 RØMER/block\nThis mechanism also incentivizes efficient block space usage through transaction batching, as users can optimize their costs by aggregating multiple transactions during low-demand periods.\nAt Market Equilibrium\n\nValidator rewards: 1 RØMER per block\nFee burning: 1 RØMER per block\nNet result: Stable supply, reflecting market equilibrium\nNatural price discovery at market-clearing rates\nNetwork operates at optimal capacity for DEX operations\n\nAbove Base Capacity\n\nValidator rewards: 1 RØMER per block\nFee burning: Continues at 1 RØMER per block\nAdditional supply: Minted based on excess demand above base capacity\nNatural price discovery through supply expansion\nMEV opportunities increase with transaction volume\n\n\n\n\n\nThe system employs two distinct formulas for supply adjustment:\nDuring Low Demand:\nDemand Deficit = Base Compute Units - Current Compute Units\nBurn Rate = Base Burn Rate × (Base Compute Units / Current Compute Units)\nNet Supply Change = Validator Emission - Burn Rate\nDuring High Demand:\nExcess Demand = Current Compute Units - Base Compute Units\nSupply Increase = Excess Demand × Market Price\nThis creates a symmetric response to market conditions, where supply can both expand and contract based on real usage patterns.\n\n\n\n\n\n\nFee burning serves a more sophisticated economic function than just offsetting emissions. During low-demand periods, enhanced fee burning actively reduces total supply to maintain true market equilibrium. This mechanism:\n\nReduces total supply when network usage falls below base capacity\nCreates natural price support during market downturns\nMaintains computation cost efficiency across market cycles\nEnsures token supply accurately reflects actual network utility\n\n\n\n\nThe burn rate scales proportionally with demand reduction: - Lower demand triggers higher burn rates - Supply contracts more quickly during sharp demand drops - System naturally finds new equilibrium points - Creates predictable price dynamics during market cycles\n\n\n\n\n\n\nValidators receive compensation through multiple market mechanisms that naturally scale with network usage:\n\nBase Block Rewards\n\nConsistent emission of 1 RØMER per block\nPredictable foundation for network security\nValue of rewards increases during low-demand periods due to supply contraction\n\nMEV-Driven Revenue Scaling\n\nAs compute requirements increase, MEV opportunities grow proportionally\nHigher network usage creates more profitable MEV extraction scenarios\nMEV rewards naturally offset increased operational costs during high-demand periods\nNo need to adjust base block rewards as MEV provides automatic economic scaling\n\nValue Appreciation\n\nSupply contraction during low demand supports value stability\nIncreased network utility drives organic value growth\nDynamic supply adjustment creates natural price discovery\n\n\nThis multi-layered reward structure ensures validators remain incentivized across market cycles, as the value of their base rewards adjusts naturally through supply dynamics.\n\n\n\n\n\n\nRØMER defines market equilibrium through a concrete, measurable metric: the ability to process more token swaps per block than any other major blockchain network while maintaining lower costs per swap. This is achieved by:\n\nComprehensive Market Analysis\n\nCollecting historical gas costs for swaps across Ethereum, Solana, and Base\nAnalyzing throughput capabilities of major DEX platforms\nMeasuring actual user costs across different market conditions\nTracking yearly trends in swap efficiency\n\nSetting Competitive Parameters\n\nBase compute capacity calibrated to exceed leading networks’ swap throughput\nTarget costs positioned below market average for equivalent operations\nRegular adjustment of parameters based on market evolution\n\n\n\n\n\nMarket participants can adjust base parameters quarterly based on: - Observed market conditions - Actual network utilization - Real validator economics - Genuine developer needs - Market competition\nThis provides a framework for natural market evolution while maintaining predictability.\n\n\n\n\n\n\nInitial network parameters will be set based on: - Observed market rates for computation - Natural validator economic requirements - Real testnet usage patterns - Security considerations\n\n\n\nThe quarterly governance process allows for natural market evolution through: 1. Market data collection and analysis 2. Community discussion of real market conditions 3. Proposal submission based on observed needs 4. Stakeholder voting 5. Implementation of market-approved changes\n\n\n\n\n\n\nThe RØMER economic model creates interesting game theoretic scenarios that encourage efficient market behavior:\n\nBulk Transaction Efficiency\n\nDuring low demand periods, fixed block costs create opportunities for transaction batching\nMarket participants can optimize their costs by aggregating multiple transactions\nHigher burn rates during low demand increase incentives for efficient block usage\nNatural formation of transaction pools and batching services\n\nStrategic Timing\n\nUsers can optimize their costs by monitoring network utilization\nBulk operations become more attractive during low-demand periods\nCreates natural load balancing through economic incentives\n\n\n\n\n\nThe relationship between compute requirements and MEV opportunities creates additional game theoretic considerations:\n\nValidator Competition\n\nHigher compute requirements lead to more complex MEV opportunities\nValidators must balance resource allocation between transaction processing and MEV extraction\nNatural market for specialized MEV extraction services\n\nUser Strategy\n\nUsers can optimize their transaction timing and grouping based on MEV patterns\nCreates opportunities for MEV-aware transaction strategies\nEncourages development of sophisticated trading and arbitrage systems\n\n\n\n\n\n\nRØMER Chain’s tokenomics model represents a practical implementation of Austrian economic principles in a blockchain context. By implementing dynamic supply adjustment that responds to market conditions through both expansion and contraction, the system maintains true economic equilibrium across market cycles.\nThe combination of proportional fee burning, validator rewards, and natural price discovery creates an environment where genuine market forces determine network economics. The addition of game theoretic elements around block space usage and MEV distribution further enhances the system’s efficiency and sustainability.\nThrough its focus on market leadership in DEX operations and its carefully balanced economic incentives, RØMER Chain positions itself as a platform for sustainable, market-driven growth in decentralized computation, with the unique ability to maintain economic stability through both growth and contraction phases."
  },
  {
    "objectID": "tokenomics.html#abstract",
    "href": "tokenomics.html#abstract",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "This paper presents RØMER Chain’s tokenomics model, grounded in Austrian economic principles of sound money and market-driven price discovery. Through dynamic supply adjustment that both expands and contracts based on real market demand, RØMER creates a system where token supply precisely reflects network utility. The model employs proportional fee burning during low-demand periods to reduce total supply, while allowing supply expansion only when genuine market demand exceeds network capacity. This approach creates a blockchain economy that responds organically to market conditions through both growth and contraction phases."
  },
  {
    "objectID": "tokenomics.html#introduction",
    "href": "tokenomics.html#introduction",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "Traditional blockchain networks often struggle with rigid monetary policies that fail to contract supply during periods of reduced demand, leading to price instability and misaligned incentives. RØMER Chain takes a fundamentally different approach, embracing Austrian economic principles where market participants’ actions determine not only supply expansion but also supply contraction, creating a truly responsive monetary system."
  },
  {
    "objectID": "tokenomics.html#austrian-economic-foundations",
    "href": "tokenomics.html#austrian-economic-foundations",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "RØMER’s economic model is built on key Austrian economic concepts:\n\nNatural Price Discovery: All prices emerge from genuine market activity rather than central planning.\nSound Money Principles: Token supply adjusts bidirectionally based on real market demand.\nMarket-Driven Growth and Contraction: Network monetary policy responds organically to actual usage patterns.\nTime Preference: The model acknowledges that market participants have different time preferences for computation resources.\n\n\n\n\nThe model implements these principles through three interconnected mechanisms:\n\nBase Validator Rewards: A steady emission of 1 RØMER per block to validators, representing the baseline cost of securing the network.\nDynamic Supply Control: Fee burning that exceeds validator emissions during low demand periods, creating natural supply contraction.\nDemand-Based Issuance: New token issuance occurs only when compute demand exceeds the network’s base capacity, representing genuine market growth."
  },
  {
    "objectID": "tokenomics.html#supply-dynamics",
    "href": "tokenomics.html#supply-dynamics",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "The system recognizes three natural market states:\n\nBelow Market Demand Threshold\n\nValidator rewards: 1 RØMER per block\nFee burning: &gt;1 RØMER per block (exceeds validator emissions)\nNet result: Supply contraction reflecting reduced market demand\nNatural price discovery through supply reduction\nBlock space optimization opportunities: Fixed block cost enables bulk transaction efficiency\n\nDuring low demand periods, the system actively reduces total supply by burning more tokens than are emitted. The burn rate is proportional to how far below the base threshold demand has fallen. This creates a natural supply contraction that maintains price equilibrium even during market downturns. For example:\nIf demand is at 50% of base threshold:\n- Validator emission: 1 RØMER/block\n- Fee burning: 2 RØMER/block\n- Net supply change: -1 RØMER/block\nThis mechanism also incentivizes efficient block space usage through transaction batching, as users can optimize their costs by aggregating multiple transactions during low-demand periods.\nAt Market Equilibrium\n\nValidator rewards: 1 RØMER per block\nFee burning: 1 RØMER per block\nNet result: Stable supply, reflecting market equilibrium\nNatural price discovery at market-clearing rates\nNetwork operates at optimal capacity for DEX operations\n\nAbove Base Capacity\n\nValidator rewards: 1 RØMER per block\nFee burning: Continues at 1 RØMER per block\nAdditional supply: Minted based on excess demand above base capacity\nNatural price discovery through supply expansion\nMEV opportunities increase with transaction volume\n\n\n\n\n\nThe system employs two distinct formulas for supply adjustment:\nDuring Low Demand:\nDemand Deficit = Base Compute Units - Current Compute Units\nBurn Rate = Base Burn Rate × (Base Compute Units / Current Compute Units)\nNet Supply Change = Validator Emission - Burn Rate\nDuring High Demand:\nExcess Demand = Current Compute Units - Base Compute Units\nSupply Increase = Excess Demand × Market Price\nThis creates a symmetric response to market conditions, where supply can both expand and contract based on real usage patterns."
  },
  {
    "objectID": "tokenomics.html#fee-burning-as-dynamic-supply-control",
    "href": "tokenomics.html#fee-burning-as-dynamic-supply-control",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "Fee burning serves a more sophisticated economic function than just offsetting emissions. During low-demand periods, enhanced fee burning actively reduces total supply to maintain true market equilibrium. This mechanism:\n\nReduces total supply when network usage falls below base capacity\nCreates natural price support during market downturns\nMaintains computation cost efficiency across market cycles\nEnsures token supply accurately reflects actual network utility\n\n\n\n\nThe burn rate scales proportionally with demand reduction: - Lower demand triggers higher burn rates - Supply contracts more quickly during sharp demand drops - System naturally finds new equilibrium points - Creates predictable price dynamics during market cycles"
  },
  {
    "objectID": "tokenomics.html#validator-economics",
    "href": "tokenomics.html#validator-economics",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "Validators receive compensation through multiple market mechanisms that naturally scale with network usage:\n\nBase Block Rewards\n\nConsistent emission of 1 RØMER per block\nPredictable foundation for network security\nValue of rewards increases during low-demand periods due to supply contraction\n\nMEV-Driven Revenue Scaling\n\nAs compute requirements increase, MEV opportunities grow proportionally\nHigher network usage creates more profitable MEV extraction scenarios\nMEV rewards naturally offset increased operational costs during high-demand periods\nNo need to adjust base block rewards as MEV provides automatic economic scaling\n\nValue Appreciation\n\nSupply contraction during low demand supports value stability\nIncreased network utility drives organic value growth\nDynamic supply adjustment creates natural price discovery\n\n\nThis multi-layered reward structure ensures validators remain incentivized across market cycles, as the value of their base rewards adjusts naturally through supply dynamics."
  },
  {
    "objectID": "tokenomics.html#market-driven-price-discovery",
    "href": "tokenomics.html#market-driven-price-discovery",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "RØMER defines market equilibrium through a concrete, measurable metric: the ability to process more token swaps per block than any other major blockchain network while maintaining lower costs per swap. This is achieved by:\n\nComprehensive Market Analysis\n\nCollecting historical gas costs for swaps across Ethereum, Solana, and Base\nAnalyzing throughput capabilities of major DEX platforms\nMeasuring actual user costs across different market conditions\nTracking yearly trends in swap efficiency\n\nSetting Competitive Parameters\n\nBase compute capacity calibrated to exceed leading networks’ swap throughput\nTarget costs positioned below market average for equivalent operations\nRegular adjustment of parameters based on market evolution\n\n\n\n\n\nMarket participants can adjust base parameters quarterly based on: - Observed market conditions - Actual network utilization - Real validator economics - Genuine developer needs - Market competition\nThis provides a framework for natural market evolution while maintaining predictability."
  },
  {
    "objectID": "tokenomics.html#implementation",
    "href": "tokenomics.html#implementation",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "Initial network parameters will be set based on: - Observed market rates for computation - Natural validator economic requirements - Real testnet usage patterns - Security considerations\n\n\n\nThe quarterly governance process allows for natural market evolution through: 1. Market data collection and analysis 2. Community discussion of real market conditions 3. Proposal submission based on observed needs 4. Stakeholder voting 5. Implementation of market-approved changes"
  },
  {
    "objectID": "tokenomics.html#game-theory-and-economic-behavior",
    "href": "tokenomics.html#game-theory-and-economic-behavior",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "The RØMER economic model creates interesting game theoretic scenarios that encourage efficient market behavior:\n\nBulk Transaction Efficiency\n\nDuring low demand periods, fixed block costs create opportunities for transaction batching\nMarket participants can optimize their costs by aggregating multiple transactions\nHigher burn rates during low demand increase incentives for efficient block usage\nNatural formation of transaction pools and batching services\n\nStrategic Timing\n\nUsers can optimize their costs by monitoring network utilization\nBulk operations become more attractive during low-demand periods\nCreates natural load balancing through economic incentives\n\n\n\n\n\nThe relationship between compute requirements and MEV opportunities creates additional game theoretic considerations:\n\nValidator Competition\n\nHigher compute requirements lead to more complex MEV opportunities\nValidators must balance resource allocation between transaction processing and MEV extraction\nNatural market for specialized MEV extraction services\n\nUser Strategy\n\nUsers can optimize their transaction timing and grouping based on MEV patterns\nCreates opportunities for MEV-aware transaction strategies\nEncourages development of sophisticated trading and arbitrage systems"
  },
  {
    "objectID": "tokenomics.html#conclusion",
    "href": "tokenomics.html#conclusion",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "",
    "text": "RØMER Chain’s tokenomics model represents a practical implementation of Austrian economic principles in a blockchain context. By implementing dynamic supply adjustment that responds to market conditions through both expansion and contraction, the system maintains true economic equilibrium across market cycles.\nThe combination of proportional fee burning, validator rewards, and natural price discovery creates an environment where genuine market forces determine network economics. The addition of game theoretic elements around block space usage and MEV distribution further enhances the system’s efficiency and sustainability.\nThrough its focus on market leadership in DEX operations and its carefully balanced economic incentives, RØMER Chain positions itself as a platform for sustainable, market-driven growth in decentralized computation, with the unique ability to maintain economic stability through both growth and contraction phases."
  },
  {
    "objectID": "tokenomics.html#initial-token-distribution",
    "href": "tokenomics.html#initial-token-distribution",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "Initial Token Distribution",
    "text": "Initial Token Distribution\n\nGenesis Allocation\nThe initial RØMER token supply at genesis is distributed as follows:\n\nMainnet Contributors (20%)\n\nAllocated to developers, VCs, and other contributors critical to achieving mainnet\nVests over the first year of mainnet operation\nEnsures alignment of early supporters with network success\nIncludes both technical and financial contributors\n\nTreasury (50%)\n\nManaged through governance\nFunds ecosystem development\nSupports grants and network growth initiatives\nEnables long-term sustainability\n\nBurn Reserve (30%)\n\nDedicated supply for maintaining price stability\nMust contain sufficient tokens for 3 months of maximum burn rate\nActs as buffer until quarterly compute threshold adjustments\nCalculated based on base compute threshold\n\n\n\n\nBurn Reserve Calculation\nThe burn reserve is sized to ensure price stability for a full quarter:\nDaily Max Burn = Base Compute Threshold × Target Price × 24 hours\nQuarterly Reserve = Daily Max Burn × 90 days × Safety Margin(1.5)\nThis ensures sufficient reserves even in sustained low-demand periods, with a safety margin to account for usage fluctuations."
  },
  {
    "objectID": "tokenomics.html#supply-mechanics",
    "href": "tokenomics.html#supply-mechanics",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "Supply Mechanics",
    "text": "Supply Mechanics\n\nPrice Stability Mechanism\nThe system maintains constant compute costs through dynamic supply management:\n\nDuring Low Demand\n\nNetwork usage below base compute threshold\nTokens are burned from the reserve\nBurn rate proportional to demand shortfall\nExample: At 50% utilization, burn 2× the standard rate\n\nDuring High Demand\n\nNetwork usage above base compute threshold\nNew tokens are minted\nMint rate matches excess demand\nMaintains fixed compute costs\n\n\n\n\nBase Compute Threshold\nThe base compute threshold is a critical network parameter: - Set initially based on market analysis of competing networks - Reviewed and adjusted quarterly through governance - Must be sustainable based on burn reserve levels - Determines network’s baseline capacity\nIf burn reserve falls below critical levels, the base compute threshold can be adjusted downward at the quarterly review to ensure sustainability.\n\n\nQuarterly Adjustments\nEvery three months, the network evaluates: 1. Current burn reserve levels 2. Network utilization patterns 3. Market conditions for computation 4. Validator economics\nBased on this analysis: - Base compute threshold may be adjusted - New burn reserve requirements calculated - Treasury may replenish burn reserve if needed\nThis creates a predictable cycle for parameter adjustments while maintaining price stability between reviews."
  },
  {
    "objectID": "tokenomics.html#example-scenarios",
    "href": "tokenomics.html#example-scenarios",
    "title": "RØMER Chain: An Austrian Economic Approach to Dynamic Supply Adjustment",
    "section": "Example Scenarios",
    "text": "Example Scenarios\n\nScenario 1: Low Demand Period\n\nNetwork at 40% of base threshold\nBurn rate increased to 2.5× standard\nExample: If base burn is 1000 RØMER/day, actual burn is 2500 RØMER/day\nPrice of computation remains constant\n\n\n\nScenario 2: High Demand Period\n\nNetwork at 150% of base threshold\nMint new tokens to cover excess demand\nExample: If demand exceeds base by 1000 compute units, mint tokens worth 1000 × target price\nComputation costs remain stable\n\n\n\nScenario 3: Burn Reserve Management\n\nReserve approaching minimum threshold\nGovernance can:\n\nReduce base compute threshold\nAuthorize treasury to replenish reserve\nCombination of both approaches\n\nEnsures long-term sustainability\n\nThis economic model creates: - Predictable costs for developers - Sustainable network economics - Clear governance mechanisms - Protection against market volatility"
  },
  {
    "objectID": "pop.html",
    "href": "pop.html",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "We present Proof of Physics, a novel security layer for Simplex Consensus that leverages physical infrastructure, network topology, and zero-knowledge proofs to create a secure and truly decentralized blockchain network. Built on Commonware primitives, our system anchors security in the immutable laws of physics - specifically the speed of light and physical reality of global network infrastructure. The system achieves security through geographic distribution, jurisdictional complexity, and cryptographic verification of physical hardware, making attacks exponentially more difficult as the network grows.\n\n\n\nCurrent blockchain consensus mechanisms face significant challenges:\n\nProof of Work consumes massive energy resources\nProof of Stake requires large capital lockup\nBoth tend toward centralization\nSecurity costs scale linearly with protected value\nMEV extraction centralizes value capture\n\nProof of Physics, built on Simplex Consensus and Commonware primitives, addresses these challenges by:\n\nLeveraging existing network infrastructure\nRequiring geographic distribution\nCreating jurisdictional complexity\nVerifying physical hardware through ZK proofs\nMaking attacks exponentially harder to coordinate\nMaintaining Simplex’s 2-hop block times\nPreserving optimal finalization latency\nDistributing value capture across regions\nRewarding actual contributions\n\n\n\n\n\n\nThe system is built on core Commonware primitives:\n\nCommonware P2P\n\n\nAuthenticated peer communication\nEncrypted connections\nAutomatic peer discovery\nMultiplexed communication\nRate limiting\nMessage compression\nNetwork simulation support\n\n\nCommonware Storage\n\n\nPersistent data storage\nArchive optimization\nJournal management\nMetadata handling\nWrite-once guarantees\nEfficient retrieval\nData integrity\n\n\nCommonware Runtime\n\n\nTask scheduling\nNetwork operations\nStorage interface\nClock synchronization\nDeterministic testing\nPerformance monitoring\n\n\nCommonware Consensus (Simplex)\n\n\nFast block times (2 hops)\nOptimal finalization (3 hops)\nExternalized proofs\nDecoupled sync\nFlexible format\nAttack recovery\n\n\n\n\nThe network is divided into distinct regions based on major internet exchanges and submarine cable landing points. One validator can be active leader per region, with selection based on sustained network performance rather than computational work or stake.\n\n\n\nValidators must:\n\nMaintain physical hardware (no cloud providers)\nDemonstrate geographic presence\nProvide high-quality network connections\nPass hardware attestation via ZK proofs\nMeet performance standards\nMaintain infrastructure\n\n\n\n\nValidators submit ZK proofs using halo2 to verify:\n\nPhysical hardware characteristics\nGeographic location\nNetwork path validity\nInfrastructure control\nPerformance capabilities\nTiming constraints\n\nProofs are required:\n\nOn network join (comprehensive)\nPer epoch (verification)\nOn challenge (random checks)\n\n\n\n\n\n\n\nSecurity is anchored in:\n\nSpeed of light constraints\nPhysical infrastructure requirements\nNetwork topology\nGeographic distribution\nHardware attestation\nInfrastructure control\n\n\n\n\nThe system gains security through:\n\nMultiple legal jurisdictions\nLocal operator relationships\nRegional diversity\nInfrastructure ownership\nNetwork path validation\nOperator incentives\n\n\n\n\nPrimary threats:\n\nCloud providers\nInfrastructure operators\nNation-state actors\n\nDefense mechanisms:\n\nPhysical Constraints\n\n\nHardware must be physical not virtual\nNetwork paths verified\nGeographic distribution enforced\nPerformance requirements\nInfrastructure validation\n\n\nJurisdictional Complexity\n\n\nMultiple legal frameworks\nLocal business relationships\nRegional operations\nInfrastructure ownership\nOperator incentives\n\n\nSimplex Consensus Protection\n\n\n2-hop block propagation\n3-hop finalization\nFast attack recovery\nNetwork resilience\nBlock verification\nPerformance optimization\n\n\nEconomic Security\n\n\nLocal operator profitability\nInfrastructure investment\nBusiness relationships\nMarket dynamics\nLong-term alignment\n\n\n\n\n\n\n\n\nNetwork Topology Protection\n\n\nValidators physically distributed\nMultiple network paths\nRegional latency advantages neutralized\nFront-running more difficult\nNo centralized points for MEV extraction\nPath diversity reduces timing advantages\nGeographic separation enforces fairness\n\n\nRegional Transaction Flow\n\n\nTransactions naturally flow through local validators\nRegional price discovery\nReduced global arbitrage opportunities\nLocal market efficiency\nDistributed order flow\nRegional market making\nFair access to local liquidity\n\n\nLatency-Based Protection\n\n\nSpeed of light constraints\nPhysical distance requirements\nNo single point of order flow\nGeographic arbitrage limitations\nTiming advantage restrictions\nNatural network partitioning\nFair order propagation\n\n\n\n\n\n\n\n\n2 network hops for block times\n3 network hops for finalization\nOptimized for network latency\nGeographic distribution balanced with performance\nFast recovery from attacks\nEfficient block propagation\n\n\n\n\n\nDecoupled block broadcast\nOptimized path selection\nRegional leadership model\nPerformance-based validation\nInfrastructure requirements\nNetwork path optimization\n\n\n\n\n\nProof of Physics represents a novel approach to blockchain consensus that combines Simplex Consensus, Commonware primitives, and physical infrastructure requirements to create a secure and truly decentralized network. By requiring validators to maintain physical infrastructure across multiple jurisdictions and continuously prove their capabilities, the system achieves exponential security scaling while maintaining fast finality and low operating costs."
  },
  {
    "objectID": "pop.html#abstract",
    "href": "pop.html#abstract",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "We present Proof of Physics, a novel security layer for Simplex Consensus that leverages physical infrastructure, network topology, and zero-knowledge proofs to create a secure and truly decentralized blockchain network. Built on Commonware primitives, our system anchors security in the immutable laws of physics - specifically the speed of light and physical reality of global network infrastructure. The system achieves security through geographic distribution, jurisdictional complexity, and cryptographic verification of physical hardware, making attacks exponentially more difficult as the network grows."
  },
  {
    "objectID": "pop.html#introduction",
    "href": "pop.html#introduction",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "Current blockchain consensus mechanisms face significant challenges:\n\nProof of Work consumes massive energy resources\nProof of Stake requires large capital lockup\nBoth tend toward centralization\nSecurity costs scale linearly with protected value\nMEV extraction centralizes value capture\n\nProof of Physics, built on Simplex Consensus and Commonware primitives, addresses these challenges by:\n\nLeveraging existing network infrastructure\nRequiring geographic distribution\nCreating jurisdictional complexity\nVerifying physical hardware through ZK proofs\nMaking attacks exponentially harder to coordinate\nMaintaining Simplex’s 2-hop block times\nPreserving optimal finalization latency\nDistributing value capture across regions\nRewarding actual contributions"
  },
  {
    "objectID": "pop.html#system-architecture",
    "href": "pop.html#system-architecture",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "The system is built on core Commonware primitives:\n\nCommonware P2P\n\n\nAuthenticated peer communication\nEncrypted connections\nAutomatic peer discovery\nMultiplexed communication\nRate limiting\nMessage compression\nNetwork simulation support\n\n\nCommonware Storage\n\n\nPersistent data storage\nArchive optimization\nJournal management\nMetadata handling\nWrite-once guarantees\nEfficient retrieval\nData integrity\n\n\nCommonware Runtime\n\n\nTask scheduling\nNetwork operations\nStorage interface\nClock synchronization\nDeterministic testing\nPerformance monitoring\n\n\nCommonware Consensus (Simplex)\n\n\nFast block times (2 hops)\nOptimal finalization (3 hops)\nExternalized proofs\nDecoupled sync\nFlexible format\nAttack recovery\n\n\n\n\nThe network is divided into distinct regions based on major internet exchanges and submarine cable landing points. One validator can be active leader per region, with selection based on sustained network performance rather than computational work or stake.\n\n\n\nValidators must:\n\nMaintain physical hardware (no cloud providers)\nDemonstrate geographic presence\nProvide high-quality network connections\nPass hardware attestation via ZK proofs\nMeet performance standards\nMaintain infrastructure\n\n\n\n\nValidators submit ZK proofs using halo2 to verify:\n\nPhysical hardware characteristics\nGeographic location\nNetwork path validity\nInfrastructure control\nPerformance capabilities\nTiming constraints\n\nProofs are required:\n\nOn network join (comprehensive)\nPer epoch (verification)\nOn challenge (random checks)"
  },
  {
    "objectID": "pop.html#security-model",
    "href": "pop.html#security-model",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "Security is anchored in:\n\nSpeed of light constraints\nPhysical infrastructure requirements\nNetwork topology\nGeographic distribution\nHardware attestation\nInfrastructure control\n\n\n\n\nThe system gains security through:\n\nMultiple legal jurisdictions\nLocal operator relationships\nRegional diversity\nInfrastructure ownership\nNetwork path validation\nOperator incentives\n\n\n\n\nPrimary threats:\n\nCloud providers\nInfrastructure operators\nNation-state actors\n\nDefense mechanisms:\n\nPhysical Constraints\n\n\nHardware must be physical not virtual\nNetwork paths verified\nGeographic distribution enforced\nPerformance requirements\nInfrastructure validation\n\n\nJurisdictional Complexity\n\n\nMultiple legal frameworks\nLocal business relationships\nRegional operations\nInfrastructure ownership\nOperator incentives\n\n\nSimplex Consensus Protection\n\n\n2-hop block propagation\n3-hop finalization\nFast attack recovery\nNetwork resilience\nBlock verification\nPerformance optimization\n\n\nEconomic Security\n\n\nLocal operator profitability\nInfrastructure investment\nBusiness relationships\nMarket dynamics\nLong-term alignment"
  },
  {
    "objectID": "pop.html#mev-protection",
    "href": "pop.html#mev-protection",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "Network Topology Protection\n\n\nValidators physically distributed\nMultiple network paths\nRegional latency advantages neutralized\nFront-running more difficult\nNo centralized points for MEV extraction\nPath diversity reduces timing advantages\nGeographic separation enforces fairness\n\n\nRegional Transaction Flow\n\n\nTransactions naturally flow through local validators\nRegional price discovery\nReduced global arbitrage opportunities\nLocal market efficiency\nDistributed order flow\nRegional market making\nFair access to local liquidity\n\n\nLatency-Based Protection\n\n\nSpeed of light constraints\nPhysical distance requirements\nNo single point of order flow\nGeographic arbitrage limitations\nTiming advantage restrictions\nNatural network partitioning\nFair order propagation"
  },
  {
    "objectID": "pop.html#performance-characteristics",
    "href": "pop.html#performance-characteristics",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "2 network hops for block times\n3 network hops for finalization\nOptimized for network latency\nGeographic distribution balanced with performance\nFast recovery from attacks\nEfficient block propagation\n\n\n\n\n\nDecoupled block broadcast\nOptimized path selection\nRegional leadership model\nPerformance-based validation\nInfrastructure requirements\nNetwork path optimization"
  },
  {
    "objectID": "pop.html#conclusion",
    "href": "pop.html#conclusion",
    "title": "Proof of Physics: A Novel Layer for Simplex Consensus Based on Physical Infrastructure and Network Topology",
    "section": "",
    "text": "Proof of Physics represents a novel approach to blockchain consensus that combines Simplex Consensus, Commonware primitives, and physical infrastructure requirements to create a secure and truly decentralized network. By requiring validators to maintain physical infrastructure across multiple jurisdictions and continuously prove their capabilities, the system achieves exponential security scaling while maintaining fast finality and low operating costs."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rømer Chain: A First Principles Approach to Blockchain Design",
    "section": "",
    "text": "The blockchain ecosystem faces several fundamental challenges that limit its potential for true decentralization and widespread adoption. To understand Rømer Chain’s innovative approach, we must first examine these core issues:\n\n\nWhile most blockchain discussions focus on token distribution or validator count, geographic centralization represents perhaps the most significant threat to network resilience. Current networks cluster around major data centers and cloud providers, creating physical points of failure that could compromise entire networks through regional outages or regulatory actions. True decentralization must begin with physical distribution.\n\n\n\nBitcoin introduced sound monetary principles aligned with Austrian economics, but subsequent blockchain platforms have largely abandoned these foundations in favor of various economic experiments. This departure from proven economic theory has led to unstable tokenomics and unpredictable costs for network usage. A blockchain designed for global adoption needs to return to these fundamental economic principles.\n\n\n\nExisting “world computer” platforms struggle with volatile and unpredictable pricing for computation. Neither the EVM’s gas model nor Solana’s fee structure provides sufficient granularity to accurately price computational resources. This uncertainty makes it difficult for applications to budget and scale effectively, hindering enterprise adoption.\n\n\n\nMiner (or Maximal) Extractable Value (MEV) has emerged as a critical challenge that threatens fair market operation on blockchain networks. As DeFi grows more sophisticated, MEV’s impact on transaction ordering and user experience will only increase, potentially undermining trust in decentralized systems. Traditional approaches to MEV often legitimize it through “fair ordering” services, which fundamentally contradicts free market principles by making transaction ordering a commodity that can be purchased.\n\n\n\nTraditional consensus mechanisms create significant barriers to network participation. Proof of Work requires massive investments in specialized hardware and energy infrastructure, while Proof of Stake demands large capital deposits. These requirements naturally lead to centralization among wealthy individuals and institutions, contradicting the democratic ideals of blockchain technology.\n\n\n\n\n\n\nRømer introduces Proof of Physics, a revolutionary consensus mechanism that simultaneously achieves true geographic decentralization and dramatically lowers barriers to participation. Unlike existing systems that require either expensive hardware (PoW) or large capital deposits (PoS), Proof of Physics enables validation based purely on a node’s capability to maintain high-quality network connections.\nThe system: - Integrates with global internet exchange points and undersea cable locations - Measures actual network performance metrics that cannot be spoofed - Requires zero-knowledge proofs of physical presence in claimed locations - Prohibits cloud provider participation to prevent data center centralization - Requires no minimum stake or specialized hardware, democratizing network participation - Enables genuine permissionless validation based on operational excellence rather than capital ownership\nThis approach not only ensures robust geographic distribution but also creates a more inclusive validation ecosystem where technical capability and operational reliability matter more than financial resources.\n\n\n\nRømer implements a economic model grounded in Austrian principles: - Maintains fixed nominal costs for computation - Allows market forces to drive token supply through automatic adjustment - Channels new token issuance to a community treasury - Implements democratic quadratic voting for treasury allocation\n\n\n\nMoving beyond the limitations of EVM and Solana, Rømer adopts Sui’s MOVE virtual machine for several key reasons: - Provides granular resource tracking for accurate compute cost estimation - Enables predictable pricing for computational resources - Offers enhanced security through resource-oriented programming - Maintains compatibility with existing development tools and practices\n\n\n\nRømer’s approach to MEV aligns with its Austrian economic principles and commitment to true market freedom: - Fixed pricing for computation eliminates validator incentives for transaction reordering - Removes traditional transaction fees, significantly reducing MEV opportunities - Ensures transaction ordering follows natural network propagation, preventing artificial manipulation - Plans to implement a Fully Homomorphic Encryption (FHE) based solution post-mainnet for handling any residual MEV concerns in a privacy-preserving manner\nThis strategy recognizes that MEV often represents a market distortion rather than a feature. By fixing computation costs and removing the ability to bribe validators through transaction fees, Rømer creates a more equitable and predictable environment that better serves all participants.\n\n\n\n\nThe combination of these solutions creates a uniquely robust platform: - Transactions reach finality in under one second - Geographic distribution provides natural DDoS resistance - Zero-knowledge proofs ensure privacy while maintaining security - Community governance ensures continued alignment with user needs\n\n\n\nRømer Chain represents a fundamental rethinking of blockchain architecture, starting from first principles rather than iterating on existing designs. By addressing core challenges in geographic centralization, economic stability, compute pricing, and MEV, it creates a foundation for truly global-scale decentralized applications.\nThe platform’s emphasis on physical security guarantees, market-responsive policies, and community governance positions it to support the next generation of blockchain applications while maintaining the core values of decentralization and censorship resistance that inspired the creation of blockchain technology."
  },
  {
    "objectID": "index.html#understanding-core-blockchain-challenges",
    "href": "index.html#understanding-core-blockchain-challenges",
    "title": "Rømer Chain: A First Principles Approach to Blockchain Design",
    "section": "",
    "text": "The blockchain ecosystem faces several fundamental challenges that limit its potential for true decentralization and widespread adoption. To understand Rømer Chain’s innovative approach, we must first examine these core issues:\n\n\nWhile most blockchain discussions focus on token distribution or validator count, geographic centralization represents perhaps the most significant threat to network resilience. Current networks cluster around major data centers and cloud providers, creating physical points of failure that could compromise entire networks through regional outages or regulatory actions. True decentralization must begin with physical distribution.\n\n\n\nBitcoin introduced sound monetary principles aligned with Austrian economics, but subsequent blockchain platforms have largely abandoned these foundations in favor of various economic experiments. This departure from proven economic theory has led to unstable tokenomics and unpredictable costs for network usage. A blockchain designed for global adoption needs to return to these fundamental economic principles.\n\n\n\nExisting “world computer” platforms struggle with volatile and unpredictable pricing for computation. Neither the EVM’s gas model nor Solana’s fee structure provides sufficient granularity to accurately price computational resources. This uncertainty makes it difficult for applications to budget and scale effectively, hindering enterprise adoption.\n\n\n\nMiner (or Maximal) Extractable Value (MEV) has emerged as a critical challenge that threatens fair market operation on blockchain networks. As DeFi grows more sophisticated, MEV’s impact on transaction ordering and user experience will only increase, potentially undermining trust in decentralized systems. Traditional approaches to MEV often legitimize it through “fair ordering” services, which fundamentally contradicts free market principles by making transaction ordering a commodity that can be purchased.\n\n\n\nTraditional consensus mechanisms create significant barriers to network participation. Proof of Work requires massive investments in specialized hardware and energy infrastructure, while Proof of Stake demands large capital deposits. These requirements naturally lead to centralization among wealthy individuals and institutions, contradicting the democratic ideals of blockchain technology."
  },
  {
    "objectID": "index.html#rømers-solutions-a-first-principles-approach",
    "href": "index.html#rømers-solutions-a-first-principles-approach",
    "title": "Rømer Chain: A First Principles Approach to Blockchain Design",
    "section": "",
    "text": "Rømer introduces Proof of Physics, a revolutionary consensus mechanism that simultaneously achieves true geographic decentralization and dramatically lowers barriers to participation. Unlike existing systems that require either expensive hardware (PoW) or large capital deposits (PoS), Proof of Physics enables validation based purely on a node’s capability to maintain high-quality network connections.\nThe system: - Integrates with global internet exchange points and undersea cable locations - Measures actual network performance metrics that cannot be spoofed - Requires zero-knowledge proofs of physical presence in claimed locations - Prohibits cloud provider participation to prevent data center centralization - Requires no minimum stake or specialized hardware, democratizing network participation - Enables genuine permissionless validation based on operational excellence rather than capital ownership\nThis approach not only ensures robust geographic distribution but also creates a more inclusive validation ecosystem where technical capability and operational reliability matter more than financial resources.\n\n\n\nRømer implements a economic model grounded in Austrian principles: - Maintains fixed nominal costs for computation - Allows market forces to drive token supply through automatic adjustment - Channels new token issuance to a community treasury - Implements democratic quadratic voting for treasury allocation\n\n\n\nMoving beyond the limitations of EVM and Solana, Rømer adopts Sui’s MOVE virtual machine for several key reasons: - Provides granular resource tracking for accurate compute cost estimation - Enables predictable pricing for computational resources - Offers enhanced security through resource-oriented programming - Maintains compatibility with existing development tools and practices\n\n\n\nRømer’s approach to MEV aligns with its Austrian economic principles and commitment to true market freedom: - Fixed pricing for computation eliminates validator incentives for transaction reordering - Removes traditional transaction fees, significantly reducing MEV opportunities - Ensures transaction ordering follows natural network propagation, preventing artificial manipulation - Plans to implement a Fully Homomorphic Encryption (FHE) based solution post-mainnet for handling any residual MEV concerns in a privacy-preserving manner\nThis strategy recognizes that MEV often represents a market distortion rather than a feature. By fixing computation costs and removing the ability to bribe validators through transaction fees, Rømer creates a more equitable and predictable environment that better serves all participants."
  },
  {
    "objectID": "index.html#technical-implementation",
    "href": "index.html#technical-implementation",
    "title": "Rømer Chain: A First Principles Approach to Blockchain Design",
    "section": "",
    "text": "The combination of these solutions creates a uniquely robust platform: - Transactions reach finality in under one second - Geographic distribution provides natural DDoS resistance - Zero-knowledge proofs ensure privacy while maintaining security - Community governance ensures continued alignment with user needs"
  },
  {
    "objectID": "index.html#future-implications",
    "href": "index.html#future-implications",
    "title": "Rømer Chain: A First Principles Approach to Blockchain Design",
    "section": "",
    "text": "Rømer Chain represents a fundamental rethinking of blockchain architecture, starting from first principles rather than iterating on existing designs. By addressing core challenges in geographic centralization, economic stability, compute pricing, and MEV, it creates a foundation for truly global-scale decentralized applications.\nThe platform’s emphasis on physical security guarantees, market-responsive policies, and community governance positions it to support the next generation of blockchain applications while maintaining the core values of decentralization and censorship resistance that inspired the creation of blockchain technology."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "engineering.html",
    "href": "engineering.html",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "This document outlines the design for integrating Sui’s object-oriented execution model with Commonware’s Simplex consensus mechanism. This integration leverages Sui’s powerful object model and Move programming language while incorporating Simplex consensus for transaction ordering and finalization. The key insight of this design is understanding that Sui serves as both the execution environment and state storage layer, while Simplex handles consensus and transaction ordering.\n\n\n\n\n\nOur system consists of three primary components that work together to provide a robust blockchain infrastructure:\n\nSui Core: Provides the foundation for execution and state management\n\nValidates Move modules and scripts\nManages object-based state storage\nHandles transaction validation and versioning\nProvides the Move execution environment\n\nSimplex Consensus: Manages the consensus layer\n\nOrders transactions based on geographic distribution\nAchieves consensus among physically distributed validators\nEnsures transaction finality\nCoordinates state transitions\n\nAdapter Layer: Orchestrates communication\n\nBridges Sui’s object model with Simplex consensus\nManages transaction batching and ordering\nSynchronizes state updates\nHandles object versioning\n\n\n\n\n\nThe system processes transactions through several distinct phases:\n\nTransaction Submission Phase\n\nUsers submit Move transactions through our API\nSui validates Move code and object ownership\nValid transactions enter the pending pool\nObject versions are tracked for dependencies\n\nConsensus Phase\n\nSimplex collects pending transactions\nGeographic consensus determines transaction order\nMove execution occurs in deterministic order\nObject versions are updated atomically\n\nFinalization Phase\n\nAdapter receives consensus decisions\nObject states are updated\nNew object versions are published\nResults are available for querying\n\n\n\n\n\n\n\n\nThe adapter implements two crucial interfaces with Sui:\n\nTransaction Processing Interface\n\npub trait MoveTransactionProcessor {\n    /// Get pending Move transactions that are ready for execution\n    fn get_pending_transactions(&self) -&gt; Vec&lt;MoveTransaction&gt;;\n    \n    /// Execute a batch of Move transactions\n    fn execute_transactions(\n        &self, \n        transactions: Vec&lt;MoveTransaction&gt;\n    ) -&gt; Result&lt;ExecutionEffects, Error&gt;;\n    \n    /// Update object versions after consensus\n    fn update_object_versions(\n        &self, \n        version_updates: Vec&lt;ObjectVersionUpdate&gt;\n    ) -&gt; Result&lt;(), Error&gt;;\n}\n\nObject Storage Interface\n\npub trait ObjectStorage {\n    /// Retrieve object state by ID and version\n    fn get_object(\n        &self, \n        id: ObjectID, \n        version: SequenceNumber\n    ) -&gt; Result&lt;Object, Error&gt;;\n    \n    /// Update object states after consensus\n    fn update_objects(\n        &self, \n        updates: Vec&lt;ObjectUpdate&gt;\n    ) -&gt; Result&lt;(), Error&gt;;\n}\n\n\n\nThe system carefully manages Move execution:\n\nObject Tracking\n\nMonitor object dependencies between transactions\nTrack object versions and ownership\nHandle concurrent access to objects\nMaintain execution invariants\n\nResource Management\n\nEfficient object storage and retrieval\nVersion history maintenance\nGarbage collection of old versions\nResource limitation enforcement\n\nExecution Prioritization\n\nHandle object dependencies\nConsider transaction urgency\nManage execution batching\n\n\n\n\n\nThe object-based state management becomes more sophisticated:\n\nObject Updates\n\nAtomic updates to object versions\nMaintenance of ownership records\nVersion history tracking\nDependency resolution\n\nState Queries\n\nEfficient object lookup\nVersion-aware querying\nHistorical state access\nOwnership verification\n\n\n\n\n\n\n\n\n\nSimplex Integration Interface\n\npub trait SimplexMoveAdapter {\n    /// Provide executable transactions to Simplex\n    fn get_executable_transactions(&self) -&gt; Result&lt;Vec&lt;MoveTransaction&gt;, Error&gt;;\n    \n    /// Handle consensus decisions\n    fn handle_consensus_decision(\n        &self, \n        decision: ConsensusDecision\n    ) -&gt; Result&lt;(), Error&gt;;\n    \n    /// Update object states after consensus\n    fn update_object_states(\n        &self, \n        state_updates: Vec&lt;ObjectStateUpdate&gt;\n    ) -&gt; Result&lt;(), Error&gt;;\n}\n\nMove Execution Interface\n\npub trait MoveExecutor {\n    /// Execute Move transaction batch\n    fn execute_move_batch(\n        &self, \n        batch: MoveBatch\n    ) -&gt; Result&lt;ExecutionResult, Error&gt;;\n    \n    /// Verify execution effects\n    fn verify_execution(\n        &self, \n        effects: ExecutionEffects\n    ) -&gt; Result&lt;bool, Error&gt;;\n}\n\n\n\nThe system handles several categories of errors:\n\nMove Execution Errors\n\nInvalid Move code\nResource unavailability\nOwnership violations\nVersion conflicts\n\nObject State Errors\n\nInvalid state transitions\nVersion conflicts\nMissing dependencies\nStorage failures\n\nSystem Errors\n\nNetwork failures\nResource exhaustion\nComponent failures\nConsensus timeouts\n\n\n\n\n\n\nThe system tracks key performance indicators:\n\nMove Metrics\n\nExecution throughput\nGas usage\nObject access patterns\nVersion chain length\n\nState Metrics\n\nObject update frequency\nStorage growth\nQuery latency\nVersion history size\n\nSystem Health\n\nComponent status\nResource utilization\nError rates\nNetwork performance\n\n\n\n\n\n\nMove Security\n\nBytecode verification\nResource safety\nOwnership enforcement\nAccess control\n\nObject Security\n\nVersion consistency\nAtomic updates\nOwnership tracking\nPermission management\n\nSystem Security\n\nResource limits\nError isolation\nRecovery procedures\nAttack resistance\n\n\n\n\n\n\nPerformance Optimizations\n\nParallel execution\nSmart batching\nState caching\nVersion pruning\n\nFeature Additions\n\nAdvanced monitoring\nExtended Move features\nEnhanced security\nCross-chain bridges\n\n\n\n\n\nThe immediate focus for development is building a Tycho indexer and simulator for the Sui mempool. This component will:\n\nIndex Capabilities\n\nTrack all Move objects and their states\nMonitor ownership changes\nRecord transaction history\nAnalyze execution patterns\n\nSimulation Features\n\nPredict transaction effects\nEstimate resource usage\nModel state changes\nTest consensus outcomes\n\nIntegration Points\n\nConnect with Sui mempool\nInterface with Simplex\nSupport monitoring tools\nEnable testing framework\n\n\n\n\n\nThis design leverages Sui’s powerful object-centric model while maintaining the geographic consensus properties of Simplex. The key to successful integration lies in careful management of Move execution, object versioning, and state transitions. Our immediate focus on Tycho integration will provide essential tooling for development and testing."
  },
  {
    "objectID": "engineering.html#introduction",
    "href": "engineering.html#introduction",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "This document outlines the design for integrating Sui’s object-oriented execution model with Commonware’s Simplex consensus mechanism. This integration leverages Sui’s powerful object model and Move programming language while incorporating Simplex consensus for transaction ordering and finalization. The key insight of this design is understanding that Sui serves as both the execution environment and state storage layer, while Simplex handles consensus and transaction ordering."
  },
  {
    "objectID": "engineering.html#system-architecture",
    "href": "engineering.html#system-architecture",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "Our system consists of three primary components that work together to provide a robust blockchain infrastructure:\n\nSui Core: Provides the foundation for execution and state management\n\nValidates Move modules and scripts\nManages object-based state storage\nHandles transaction validation and versioning\nProvides the Move execution environment\n\nSimplex Consensus: Manages the consensus layer\n\nOrders transactions based on geographic distribution\nAchieves consensus among physically distributed validators\nEnsures transaction finality\nCoordinates state transitions\n\nAdapter Layer: Orchestrates communication\n\nBridges Sui’s object model with Simplex consensus\nManages transaction batching and ordering\nSynchronizes state updates\nHandles object versioning\n\n\n\n\n\nThe system processes transactions through several distinct phases:\n\nTransaction Submission Phase\n\nUsers submit Move transactions through our API\nSui validates Move code and object ownership\nValid transactions enter the pending pool\nObject versions are tracked for dependencies\n\nConsensus Phase\n\nSimplex collects pending transactions\nGeographic consensus determines transaction order\nMove execution occurs in deterministic order\nObject versions are updated atomically\n\nFinalization Phase\n\nAdapter receives consensus decisions\nObject states are updated\nNew object versions are published\nResults are available for querying"
  },
  {
    "objectID": "engineering.html#component-details",
    "href": "engineering.html#component-details",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "The adapter implements two crucial interfaces with Sui:\n\nTransaction Processing Interface\n\npub trait MoveTransactionProcessor {\n    /// Get pending Move transactions that are ready for execution\n    fn get_pending_transactions(&self) -&gt; Vec&lt;MoveTransaction&gt;;\n    \n    /// Execute a batch of Move transactions\n    fn execute_transactions(\n        &self, \n        transactions: Vec&lt;MoveTransaction&gt;\n    ) -&gt; Result&lt;ExecutionEffects, Error&gt;;\n    \n    /// Update object versions after consensus\n    fn update_object_versions(\n        &self, \n        version_updates: Vec&lt;ObjectVersionUpdate&gt;\n    ) -&gt; Result&lt;(), Error&gt;;\n}\n\nObject Storage Interface\n\npub trait ObjectStorage {\n    /// Retrieve object state by ID and version\n    fn get_object(\n        &self, \n        id: ObjectID, \n        version: SequenceNumber\n    ) -&gt; Result&lt;Object, Error&gt;;\n    \n    /// Update object states after consensus\n    fn update_objects(\n        &self, \n        updates: Vec&lt;ObjectUpdate&gt;\n    ) -&gt; Result&lt;(), Error&gt;;\n}\n\n\n\nThe system carefully manages Move execution:\n\nObject Tracking\n\nMonitor object dependencies between transactions\nTrack object versions and ownership\nHandle concurrent access to objects\nMaintain execution invariants\n\nResource Management\n\nEfficient object storage and retrieval\nVersion history maintenance\nGarbage collection of old versions\nResource limitation enforcement\n\nExecution Prioritization\n\nHandle object dependencies\nConsider transaction urgency\nManage execution batching\n\n\n\n\n\nThe object-based state management becomes more sophisticated:\n\nObject Updates\n\nAtomic updates to object versions\nMaintenance of ownership records\nVersion history tracking\nDependency resolution\n\nState Queries\n\nEfficient object lookup\nVersion-aware querying\nHistorical state access\nOwnership verification"
  },
  {
    "objectID": "engineering.html#implementation-details",
    "href": "engineering.html#implementation-details",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "Simplex Integration Interface\n\npub trait SimplexMoveAdapter {\n    /// Provide executable transactions to Simplex\n    fn get_executable_transactions(&self) -&gt; Result&lt;Vec&lt;MoveTransaction&gt;, Error&gt;;\n    \n    /// Handle consensus decisions\n    fn handle_consensus_decision(\n        &self, \n        decision: ConsensusDecision\n    ) -&gt; Result&lt;(), Error&gt;;\n    \n    /// Update object states after consensus\n    fn update_object_states(\n        &self, \n        state_updates: Vec&lt;ObjectStateUpdate&gt;\n    ) -&gt; Result&lt;(), Error&gt;;\n}\n\nMove Execution Interface\n\npub trait MoveExecutor {\n    /// Execute Move transaction batch\n    fn execute_move_batch(\n        &self, \n        batch: MoveBatch\n    ) -&gt; Result&lt;ExecutionResult, Error&gt;;\n    \n    /// Verify execution effects\n    fn verify_execution(\n        &self, \n        effects: ExecutionEffects\n    ) -&gt; Result&lt;bool, Error&gt;;\n}\n\n\n\nThe system handles several categories of errors:\n\nMove Execution Errors\n\nInvalid Move code\nResource unavailability\nOwnership violations\nVersion conflicts\n\nObject State Errors\n\nInvalid state transitions\nVersion conflicts\nMissing dependencies\nStorage failures\n\nSystem Errors\n\nNetwork failures\nResource exhaustion\nComponent failures\nConsensus timeouts"
  },
  {
    "objectID": "engineering.html#monitoring-and-metrics",
    "href": "engineering.html#monitoring-and-metrics",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "The system tracks key performance indicators:\n\nMove Metrics\n\nExecution throughput\nGas usage\nObject access patterns\nVersion chain length\n\nState Metrics\n\nObject update frequency\nStorage growth\nQuery latency\nVersion history size\n\nSystem Health\n\nComponent status\nResource utilization\nError rates\nNetwork performance"
  },
  {
    "objectID": "engineering.html#security-considerations",
    "href": "engineering.html#security-considerations",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "Move Security\n\nBytecode verification\nResource safety\nOwnership enforcement\nAccess control\n\nObject Security\n\nVersion consistency\nAtomic updates\nOwnership tracking\nPermission management\n\nSystem Security\n\nResource limits\nError isolation\nRecovery procedures\nAttack resistance"
  },
  {
    "objectID": "engineering.html#future-enhancements",
    "href": "engineering.html#future-enhancements",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "Performance Optimizations\n\nParallel execution\nSmart batching\nState caching\nVersion pruning\n\nFeature Additions\n\nAdvanced monitoring\nExtended Move features\nEnhanced security\nCross-chain bridges"
  },
  {
    "objectID": "engineering.html#development-priority-tycho-integration",
    "href": "engineering.html#development-priority-tycho-integration",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "The immediate focus for development is building a Tycho indexer and simulator for the Sui mempool. This component will:\n\nIndex Capabilities\n\nTrack all Move objects and their states\nMonitor ownership changes\nRecord transaction history\nAnalyze execution patterns\n\nSimulation Features\n\nPredict transaction effects\nEstimate resource usage\nModel state changes\nTest consensus outcomes\n\nIntegration Points\n\nConnect with Sui mempool\nInterface with Simplex\nSupport monitoring tools\nEnable testing framework"
  },
  {
    "objectID": "engineering.html#conclusion",
    "href": "engineering.html#conclusion",
    "title": "Design Document: Sui-Simplex Consensus Adapter",
    "section": "",
    "text": "This design leverages Sui’s powerful object-centric model while maintaining the geographic consensus properties of Simplex. The key to successful integration lies in careful management of Move execution, object versioning, and state transitions. Our immediate focus on Tycho integration will provide essential tooling for development and testing."
  },
  {
    "objectID": "pitch/index.html#the-problem",
    "href": "pitch/index.html#the-problem",
    "title": "Rømer Chain",
    "section": "The Problem",
    "text": "The Problem\nCurrent blockchain architectures face fundamental challenges:\n\n\nGeographic Centralization - Existing chains optimize for node count rather than true physical decentralization\nHigh Validator Barriers - Proof of Work and Proof of Stake create massive financial barriers to participation\nUnstable Computation Costs - No blockchain provides predictable, Austrian economics-aligned pricing for compute\nMEV as a Market Distortion - Current chains treat MEV as a feature rather than a fundamental economic flaw"
  },
  {
    "objectID": "pitch/index.html#why-geographic-decentralization-matters",
    "href": "pitch/index.html#why-geographic-decentralization-matters",
    "title": "Rømer Chain",
    "section": "Why Geographic Decentralization Matters",
    "text": "Why Geographic Decentralization Matters\n\n\nSpeed of light creates immutable constraints on network topology\nPhysical infrastructure can’t be faked or virtualized\nTrue resilience comes from geographic distribution\nPrevents capture by any single jurisdiction\nCreates natural DDoS resistance through physical separation"
  },
  {
    "objectID": "pitch/index.html#the-current-state-of-blockchain-economics",
    "href": "pitch/index.html#the-current-state-of-blockchain-economics",
    "title": "Rømer Chain",
    "section": "The Current State of Blockchain Economics",
    "text": "The Current State of Blockchain Economics\n\n\nVolatile and unpredictable computation costs\nHigh barriers to entry for network participation\nCentralization pressure from economies of scale\nLack of sound money principles in system design\nTransaction ordering becoming a purchasable commodity"
  },
  {
    "objectID": "pitch/index.html#introducing-rømer-chain",
    "href": "pitch/index.html#introducing-rømer-chain",
    "title": "Rømer Chain",
    "section": "Introducing Rømer Chain",
    "text": "Introducing Rømer Chain\nBuilt from first principles to solve these core challenges:\n\n\nProof of Physics - Validators selected based on network performance and geographic distribution, with physical location proved by ZK proofs\nCommonware Primitives - Utilizing advanced consensus mechanisms like Simplex for optimal cross-region performance\nSui Object Model - Leveraging Move’s resource-oriented programming for precise compute cost calculation\nAustrian Economic Design - Fixed computation costs with market-driven supply adjustment"
  },
  {
    "objectID": "pitch/index.html#technical-architecture",
    "href": "pitch/index.html#technical-architecture",
    "title": "Rømer Chain",
    "section": "Technical Architecture",
    "text": "Technical Architecture\nOur stack combines four powerful technologies:\n\n\n1. Commonware Primitives\n\nSimplex consensus for fast cross-region messaging\nGeographic optimization at protocol level\nSecure validator communication network\n\n2. Proof of Physics\n\nOne validator per major internet exchange\nPerformance-based selection process\nRequired diversity in BGP paths\n\n\n3. Sui Integration\n\nMove-based execution layer\nObject-oriented state management\nPrecise compute cost tracking\n\n4. FHE Foundation\n\nPrivacy-preserving transaction ordering\nFuture MEV protection layer\nPost-mainnet development focus"
  },
  {
    "objectID": "pitch/index.html#tokenomics-economic-philosophy",
    "href": "pitch/index.html#tokenomics-economic-philosophy",
    "title": "Rømer Chain",
    "section": "Tokenomics: Economic Philosophy",
    "text": "Tokenomics: Economic Philosophy\nOur token model embodies Austrian economic principles:\n\n\nStability as a First-Class Citizen\n\nFixed compute costs\nMarket-driven supply adjustment\nAutomatic expansion and contraction\n\nSound Money Implementation\n\nNatural price discovery\nNo artificial scarcity\nMarket-based supply control\n\nValidator Sustainability\n\nNo minimum stake requirement\nRewards based on network performance\nGeographic distribution incentives"
  },
  {
    "objectID": "pitch/index.html#supply-dynamics",
    "href": "pitch/index.html#supply-dynamics",
    "title": "Rømer Chain",
    "section": "Supply Dynamics",
    "text": "Supply Dynamics\nMarket-Responsive Supply Mechanism\ndef calculate_supply_adjustment(base_compute_units, actual_compute_units):\n    BASE_COST_TARGET = 0.001  # RØMER per compute unit\n    \n    if actual_compute_units &gt; base_compute_units:\n        new_supply = (actual_compute_units - base_compute_units) * \n                     (BASE_COST_TARGET / base_compute_units)\n        return new_supply\n    \n    # Supply contraction during low demand\n    contraction_rate = base_compute_units / actual_compute_units\n    return -1 * (BASE_COST_TARGET * contraction_rate)\n\n\nBidirectional supply adjustment\nNatural market equilibrium\nAutomatic price stability"
  },
  {
    "objectID": "pitch/index.html#development-roadmap",
    "href": "pitch/index.html#development-roadmap",
    "title": "Rømer Chain",
    "section": "Development Roadmap",
    "text": "Development Roadmap\nDevnet Phase\n\n\nSui Integration\n\nImplementing Sui mempool operations\nBuilding Tycho indexer and simulator\nTransaction validation framework\nMove resource tracking integration\n\nInfrastructure Development\n\nProof of Physics implementation\nGeographic validator network\nNetwork performance measurement"
  },
  {
    "objectID": "pitch/index.html#funding-strategy",
    "href": "pitch/index.html#funding-strategy",
    "title": "Rømer Chain",
    "section": "Funding Strategy",
    "text": "Funding Strategy\nCurrent Stage: Angel Round\n\n\nStrategic Partnerships\n\nExploring Sui Foundation grant opportunities\nPotential Movement Labs collaboration for Aptos Move\nFocus on technical infrastructure development\n\nDevelopment Priorities\n\nMempool operation and monitoring\nTransaction validation framework\nGeographic proof system"
  },
  {
    "objectID": "pitch/index.html#why-now",
    "href": "pitch/index.html#why-now",
    "title": "Rømer Chain",
    "section": "Why Now?",
    "text": "Why Now?\nThe market needs a blockchain that:\n\n\nProvides genuine geographic decentralization\nImplements sound Austrian economics\nOffers predictable computation costs\nEliminates financial barriers to validation\nCreates natural resistance to centralization"
  },
  {
    "objectID": "pitch/index.html#long-term-vision",
    "href": "pitch/index.html#long-term-vision",
    "title": "Rømer Chain",
    "section": "Long-Term Vision",
    "text": "Long-Term Vision\n\n\nNetwork Sustainability\n\nGeographic resilience\nEconomic stability\nPermissionless validation\n\nTechnical Innovation\n\nFHE-based privacy features\nAdvanced MEV protection\nContinued geographic expansion\n\nPhilosophical Foundation\n\nTrue decentralization\nSound money principles\nMarket-driven evolution"
  },
  {
    "objectID": "regions.html",
    "href": "regions.html",
    "title": "Rømer Chain",
    "section": "",
    "text": "City\nCategory\nJurisdiction\n\n\n\n\nFrankfurt\nMajor Internet Exchange (DE-CIX)\nEuropean Union/Germany\n\n\nAmsterdam\nMajor Internet Exchange (AMS-IX)\nEuropean Union/Netherlands\n\n\nLondon\nMajor Internet Exchange (LINX)\nUnited Kingdom\n\n\nAshburn VA\nMajor Internet Exchange (Equinix)\nUnited States/Federal\n\n\nNew York/NJ\nMajor Internet Exchange (NYIIX)\nUnited States/Federal\n\n\nTokyo\nMajor Internet Exchange (JPNAP)\nJapan\n\n\nSingapore\nMajor Internet Exchange (SGIX)\nSingapore\n\n\nHong Kong\nMajor Internet Exchange (HKIX)\nHong Kong SAR\n\n\nSydney\nMajor Internet Exchange (IX Australia)\nAustralia\n\n\nSão Paulo\nMajor Internet Exchange (IX.br)\nBrazil\n\n\nMarseille\nSubmarine Cable Landing\nEuropean Union/France\n\n\nLos Angeles\nSubmarine Cable Landing\nUnited States/California\n\n\nSeattle\nSubmarine Cable Landing\nUnited States/Washington\n\n\nMiami\nSubmarine Cable Landing\nUnited States/Florida\n\n\nToronto\nSubmarine Cable Landing\nCanada/Ontario\n\n\nDubai\nSubmarine Cable Landing\nUAE\n\n\nMumbai\nSubmarine Cable Landing\nIndia\n\n\nChennai\nSubmarine Cable Landing\nIndia\n\n\nFortaleza\nSubmarine Cable Landing\nBrazil\n\n\nManila\nSubmarine Cable Landing\nPhilippines\n\n\nStockholm\nStrategic Terrestrial Crossing\nEuropean Union/Sweden\n\n\nWarsaw\nStrategic Terrestrial Crossing\nEuropean Union/Poland\n\n\nIstanbul\nStrategic Terrestrial Crossing\nTurkey\n\n\nCairo\nStrategic Terrestrial Crossing\nEgypt\n\n\nMoscow\nStrategic Terrestrial Crossing\nRussia\n\n\nBeijing\nStrategic Terrestrial Crossing\nChina\n\n\nSeoul\nStrategic Terrestrial Crossing\nSouth Korea\n\n\nTaipei\nStrategic Terrestrial Crossing\nTaiwan\n\n\nJakarta\nStrategic Terrestrial Crossing\nIndonesia\n\n\nAuckland\nStrategic Terrestrial Crossing\nNew Zealand\n\n\nParis\nRegional Internet Exchange (France-IX)\nEuropean Union/France\n\n\nMadrid\nRegional Internet Exchange (ESPANIX)\nEuropean Union/Spain\n\n\nMilan\nRegional Internet Exchange (MIX)\nEuropean Union/Italy\n\n\nVienna\nRegional Internet Exchange (VIX)\nEuropean Union/Austria\n\n\nPrague\nRegional Internet Exchange (NIX.CZ)\nEuropean Union/Czech Republic\n\n\nCopenhagen\nRegional Internet Exchange (Netnod)\nEuropean Union/Denmark\n\n\nHelsinki\nRegional Internet Exchange (FICIX)\nEuropean Union/Finland\n\n\nTel Aviv\nRegional Internet Exchange (IIX)\nIsrael\n\n\nJohannesburg\nRegional Internet Exchange (NAPAfrica)\nSouth Africa\n\n\nLagos\nRegional Internet Exchange (IXPN)\nNigeria\n\n\nNairobi\nEmerging Strategic Point\nKenya\n\n\nCape Town\nEmerging Strategic Point\nSouth Africa\n\n\nPanama City\nEmerging Strategic Point\nPanama\n\n\nSantiago\nEmerging Strategic Point\nChile\n\n\nVancouver\nEmerging Strategic Point\nCanada/British Columbia\n\n\nPerth\nEmerging Strategic Point\nAustralia\n\n\nKuala Lumpur\nEmerging Strategic Point\nMalaysia\n\n\nMuscat\nEmerging Strategic Point\nOman\n\n\nDublin\nEmerging Strategic Point\nEuropean Union/Ireland\n\n\nMontreal\nEmerging Strategic Point\nCanada/Quebec\n\n\nBuenos Aires\nRegional Internet Exchange (CABASE)\nArgentina\n\n\nRio de Janeiro\nRegional Internet Exchange (IX.br)\nBrazil\n\n\nBogotá\nRegional Internet Exchange (NAP Colombia)\nColombia\n\n\nMexico City\nRegional Internet Exchange (IXSY)\nMexico\n\n\nLima\nRegional Internet Exchange (NAP Peru)\nPeru\n\n\nQuito\nRegional Internet Exchange (NAP.EC)\nEcuador\n\n\nCaracas\nRegional Internet Exchange (IXP Venezuela)\nVenezuela\n\n\nSan Juan\nRegional Internet Exchange (Puerto Rico Bridge Initiative)\nPuerto Rico\n\n\nWashington D.C.\nMajor Internet Exchange (Equinix)\nUnited States/Federal\n\n\nChicago\nMajor Internet Exchange (CHI-X)\nUnited States/Illinois\n\n\nAtlanta\nMajor Internet Exchange (Equinix)\nUnited States/Georgia\n\n\nDallas\nMajor Internet Exchange (Equinix)\nUnited States/Texas\n\n\nDenver\nMajor Internet Exchange (Any2)\nUnited States/Colorado\n\n\nPhoenix\nMajor Internet Exchange (Phoenix-IX)\nUnited States/Arizona\n\n\nSan Jose\nMajor Internet Exchange (Equinix)\nUnited States/California\n\n\nBoston\nMajor Internet Exchange (MASS-IX)\nUnited States/Massachusetts\n\n\nOsaka\nMajor Internet Exchange (JPIX)\nJapan\n\n\nNagoya\nMajor Internet Exchange (JPNAP)\nJapan\n\n\nFukuoka\nMajor Internet Exchange (BBIX)\nJapan\n\n\nSapporo\nMajor Internet Exchange (BBIX)\nJapan\n\n\nShanghai\nMajor Internet Exchange (CHN-IX)\nChina\n\n\nGuangzhou\nMajor Internet Exchange (CHN-IX)\nChina\n\n\nShenzhen\nMajor Internet Exchange (CHN-IX)\nChina\n\n\nTaipei\nMajor Internet Exchange (TPIX)\nTaiwan\n\n\nKaohsiung\nMajor Internet Exchange (TPIX)\nTaiwan\n\n\nBangkok\nMajor Internet Exchange (BKNIX)\nThailand\n\n\nHo Chi Minh City\nMajor Internet Exchange (VNIX)\nVietnam\n\n\nHanoi\nMajor Internet Exchange (VNIX)\nVietnam\n\n\nKuala Lumpur\nMajor Internet Exchange (MyIX)\nMalaysia\n\n\nCyberjaya\nMajor Internet Exchange (JBIX)\nMalaysia\n\n\nQuezon City\nMajor Internet Exchange (PHOpenIX)\nPhilippines\n\n\nCebu City\nMajor Internet Exchange (PHOpenIX)\nPhilippines\n\n\nMumbai\nMajor Internet Exchange (NIXI)\nIndia\n\n\nDelhi\nMajor Internet Exchange (NIXI)\nIndia\n\n\nBangalore\nMajor Internet Exchange (NIXI)\nIndia\n\n\nHyderabad\nMajor Internet Exchange (NIXI)\nIndia\n\n\nChennai\nMajor Internet Exchange (NIXI)\nIndia\n\n\nKolkata\nMajor Internet Exchange (NIXI)\nIndia\n\n\nPune\nMajor Internet Exchange (NIXI)\nIndia\n\n\nRiyadh\nMajor Internet Exchange (SAIX)\nSaudi Arabia\n\n\nJeddah\nMajor Internet Exchange (SAIX)\nSaudi Arabia\n\n\nDubai\nMajor Internet Exchange (UAE-IX)\nUAE\n\n\nAbu Dhabi\nMajor Internet Exchange (UAE-IX)\nUAE\n\n\nDoha\nMajor Internet Exchange (QIXP)\nQatar\n\n\nKuwait City\nMajor Internet Exchange (IX.kw)\nKuwait\n\n\nManama\nMajor Internet Exchange (BIXP)\nBahrain\n\n\nJohannesburg\nMajor Internet Exchange (JINX)\nSouth Africa\n\n\nCape Town\nMajor Internet Exchange (CINX)\nSouth Africa\n\n\nDurban\nMajor Internet Exchange (DINX)\nSouth Africa\n\n\nNairobi\nMajor Internet Exchange (KIXP)\nKenya\n\n\nMombasa\nMajor Internet Exchange (KIXP)\nKenya"
  }
]